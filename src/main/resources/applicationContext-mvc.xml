<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
       xmlns:aop="http://www.springframework.org/schema/aop" 
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" 
       xmlns:tx="http://www.springframework.org/schema/tx" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd  
        http://www.springframework.org/schema/beans  
         http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
         http://www.springframework.org/schema/context  
         http://www.springframework.org/schema/context/spring-context-3.0.xsd  
         http://www.springframework.org/schema/mvc  
         http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd  
         http://www.springframework.org/schema/tx  
         http://www.springframework.org/schema/tx/spring-tx-3.0.xsd"> 
    <mvc:annotation-driven />
    <context:component-scan base-package="com.oec" />
    
	<!-- author:liujie -->
	<!-- 开启Shiro注解的Spring配置方式的beans。在lifecycleBeanPostProcessor之后运行 必须放在springMVC的配置文件中。-->  
		  <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">  
		    <property name="exceptionMappings">  
		        <props>  
		            <prop key="org.apache.shiro.authz.UnauthorizedException">/403</prop>
		        </props>  
		    </property>  
		</bean>  
		<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
			 <property name="proxyTargetClass" value="true"/> 
		</bean>    
		<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		    <property name="securityManager" ref="securityManager"/>
		</bean>
	
   
   <!-- jdbc  配置  -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
              <property name="driverClass" value="${jdbc.driver}"></property>
              <property name="jdbcUrl" value="${jdbc.url}"></property>
              <property name="user" value="${jdbc.username}"></property>
              <property name="password" value="${jdbc.password}"></property>
               <!--连接池中保留的最大连接数。默认值: 15 -->   
	          <property name="maxPoolSize" value="20"/>  
	          <!-- 连接池中保留的最小连接数，默认为：3-->  
	          <property name="minPoolSize" value="2"/>  
	          <!-- 初始化连接池中的连接数，取值应在minPoolSize与maxPoolSize之间，默认为3-->  
	          <property name="initialPoolSize" value="2"/>  
       </bean>
      <!-- jdbcTemplate -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource" />
    </bean>
      <!-- 事物 -->
    <bean id="transactionManager"
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    <!-- 加载配置文件 -->
     <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath*:/app.properties</value>
            </list>
        </property>
    </bean>
    <!-- 使用ehcache缓存 -->
<!--     <bean id="ehCacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"> -->
<!-- 		<property name="configLocation" value="classpath:/ehcache.xml" /> -->
<!-- 		<property name="shared" value="true" /> -->
<!-- 	</bean> -->
<!-- 	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager"> -->
<!-- 		<property name="cacheManager" ref="ehCacheManager" /> -->
<!-- 	</bean> -->
   <!-- 配置Json解释器 -->
<!--     <bean -->
<!--         class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" -->
<!--         lazy-init="false"> -->
<!--         <property name="messageConverters"> -->
<!--             <list> -->
<!--                 <bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" /> -->
<!--             </list> -->
<!--         </property> -->
<!--     </bean> -->
  <!-- 配置国际化 -->
<!--     <bean id="localeChangeInterceptor" -->
<!-- 	      class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"> -->
<!-- 	    <property name="paramName" value="siteLanguage"/> -->
<!--     </bean> -->
 <!-- 配置文件上传 -->
<!--     <bean id="multipartResolver" -->
<!-- 	  class="org.springframework.web.multipart.commons.CommonsMultipartResolver"> -->
<!-- 	  以字节为单位的最大上传文件的大小 --> 
<!-- 	  <property name="maxUploadSize" value="10000000" /> -->
<!-- 	</bean> -->
		<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<bean
					class="org.springframework.http.converter.StringHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
						<value>text/html;charset=UTF-8</value>
						</list>
					</property>
				</bean>
			</list>
		</property>
	</bean>

	<!-- 静态配置 -->
	<mvc:resources mapping="/videos/**" location="/WEB-INF/videos/" />
	<mvc:resources mapping="css/**" location="/WEB-INF/css/" />
	<mvc:resources mapping="images/**" location="/WEB-INF/images/" />
	<mvc:resources mapping="js/**" location="/WEB-INF/js/" />


    <!-- 声明viewResolver -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/videos/" />
        <property name="suffix" value=".jsp" />
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
    </bean>

	<!-- 文件上传解析器    -->
    <bean id="multipartResolver"
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- one of the properties available; the maximum file size in bytes -->
        <property name="maxUploadSize" value="-1"/>
    </bean>

<!-- 该 BeanPostProcessor 将自动对标注 @Autowired 的 Bean 进行注入 -->     
  <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>  
</beans>